<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="14" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-02T06:31:58 CEST" name="Loan Department" finished-at="2023-06-02T06:31:58 CEST" duration-ms="65">
    <groups>
      <group name="smoke">
        <method signature="Day_3.webLogin_carLoan()[pri:0, instance:test.Day_3@fba92d3]" name="webLogin_carLoan" class="test.Day_3"/>
        <method signature="Day_4.APILogin_homeLoan()[pri:0, instance:test.Day_4@662b4c69]" name="APILogin_homeLoan" class="test.Day_4"/>
        <method signature="Day_1.Demo()[pri:0, instance:test.Day_1@1ba9117e]" name="Demo" class="test.Day_1"/>
        <method signature="Day_2.anotherTest()[pri:0, instance:test.Day_2@6d4e5011]" name="anotherTest" class="test.Day_2"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-06-02T06:31:58 CEST" name="Personal loans" finished-at="2023-06-02T06:31:58 CEST" duration-ms="65">
      <class name="test.Day_3">
        <test-method is-config="true" signature="beforeSuite(java.lang.String)[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="beforeSuite" finished-at="2023-06-02T06:31:58 CEST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[google.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="beforeClass" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="APILogin_carLoan()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="APILogin_carLoan" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILogin_carLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="beforeMethod" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLogin_2_carLoan()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="MobileLogin_2_carLoan" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin_2_carLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="beforeMethod" finished-at="2023-06-02T06:31:58 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLogin_3_carLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="MobileLogin_3_carLoan" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.personalLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Leo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin_3_carLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="beforeMethod" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="webLogin_carLoan()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="webLogin_carLoan" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLogin_carLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="beforeMethod" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLogin_1_carLoan()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="MobileLogin_1_carLoan" finished-at="2023-06-02T06:31:58 CEST" depends-on-methods="test.Day_3.MobileLogin_2_carLoan" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin_1_carLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="beforeMethod" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.Day_3@fba92d3]" started-at="2023-06-02T06:31:58 CEST" name="afterClass" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.Day_3 -->
      <class name="test.Day_4">
        <test-method signature="APILogin_homeLoan()[pri:0, instance:test.Day_4@662b4c69]" started-at="2023-06-02T06:31:58 CEST" name="APILogin_homeLoan" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILogin_homeLoan -->
        <test-method signature="MobileLogin_homeLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day_4@662b4c69]" started-at="2023-06-02T06:31:58 CEST" name="MobileLogin_homeLoan" data-provider="getData" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Leopa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin_homeLoan -->
        <test-method signature="MobileLogin_homeLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day_4@662b4c69]" started-at="2023-06-02T06:31:58 CEST" name="MobileLogin_homeLoan" data-provider="getData" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Paola]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin_homeLoan -->
        <test-method signature="MobileLogin_homeLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day_4@662b4c69]" started-at="2023-06-02T06:31:58 CEST" name="MobileLogin_homeLoan" data-provider="getData" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Richard]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin_homeLoan -->
        <test-method signature="webLogin_homeLoan()[pri:0, instance:test.Day_4@662b4c69]" started-at="2023-06-02T06:31:58 CEST" name="webLogin_homeLoan" finished-at="2023-06-02T06:31:58 CEST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day_4.webLogin_homeLoan(Day_4.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLogin_homeLoan -->
      </class> <!-- test.Day_4 -->
      <class name="test.Day_1">
        <test-method signature="Demo()[pri:0, instance:test.Day_1@1ba9117e]" started-at="2023-06-02T06:31:58 CEST" name="Demo" finished-at="2023-06-02T06:31:58 CEST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="secondTest()[pri:0, instance:test.Day_1@1ba9117e]" started-at="2023-06-02T06:31:58 CEST" name="secondTest" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
      </class> <!-- test.Day_1 -->
      <class name="test.Day_2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.Day_2@6d4e5011]" started-at="2023-06-02T06:31:58 CEST" name="prerequisite" finished-at="2023-06-02T06:31:58 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Day_2@6d4e5011]" started-at="2023-06-02T06:31:58 CEST" name="beforeMethod" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="anotherTest()[pri:0, instance:test.Day_2@6d4e5011]" started-at="2023-06-02T06:31:58 CEST" name="anotherTest" finished-at="2023-06-02T06:31:58 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anotherTest -->
        <test-method is-config="true" signature="anotherLoan()[pri:0, instance:test.Day_2@6d4e5011]" started-at="2023-06-02T06:31:58 CEST" name="anotherLoan" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- anotherLoan -->
        <test-method is-config="true" signature="afterSUITE()[pri:0, instance:test.Day_2@6d4e5011]" started-at="2023-06-02T06:31:58 CEST" name="afterSUITE" finished-at="2023-06-02T06:31:58 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSUITE -->
      </class> <!-- test.Day_2 -->
    </test> <!-- Personal loans -->
  </suite> <!-- Loan Department -->
</testng-results>
